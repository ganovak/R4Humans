<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graphics on R 4 Humans</title>
    <link>/categories/graphics/</link>
    <description>Recent content in Graphics on R 4 Humans</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/graphics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Multi-Plot Formatting</title>
      <link>/project/multiplotformatting/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/multiplotformatting/</guid>
      <description>Adding one plot to a report is not hard. The difficulty comes when two or more plots are required to be arranged in some sort of grid (this includes just two graphs side by side). There are several options for how this is accomplished based on what specific arguments are needed.
Data PreparationExample data used in demonstration available here
#### Packages ####library(tidyverse)#### Data Read In ####diseases &amp;lt;- read.</description>
    </item>
    
    <item>
      <title>Complete Guide to ggplot2 Geoms</title>
      <link>/project/completeguidetogeoms/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/completeguidetogeoms/</guid>
      <description>ggplot graphics are built by what are called geoms. These basically determine that type of graph that will be produced. Several geoms can be layered into a single graphic, each using different data if necessary. This will be a basic run down of the availible geoms and their common uses.
Reference LinesGeomDataPurposegeom_abline()slope; interceptDiagonal reference linegeom_hline()yinterceptHorizontal reference linegeom_vline()xinterceptVertical reference lineBar ChartsComing soon</description>
    </item>
    
    <item>
      <title>Multi-Line Text in ggplot2 Graphics</title>
      <link>/2019/08/14/multi-line-text-in-ggplot2-graphics/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/14/multi-line-text-in-ggplot2-graphics/</guid>
      <description>In terms of labeling, ggplot2 provides a lot of options. However, the default is to put this text in a single line, regardless of length. This can do real strange things to spacing within the figure. Shortening labels is not always an option, so here we will explore the available labels for ggplot figures and how to force multi-lines.
Available labels# simulating dataset.seed(08142019)data&amp;lt;-data.frame(x=sample(1:100,100),y=sample(1:100,100),cat1=sample(c(&amp;quot;group 1&amp;quot;,&amp;quot;group 2&amp;quot;),100,replace=T),cat2=sample(c(&amp;quot;type 1&amp;quot;,&amp;quot;type 2&amp;quot;),100,replace=T))# plot without label specifcationlibrary(ggplot2)plot1&amp;lt;-ggplot(data,aes(x,y,shape=cat1,color=cat2))+geom_point()plot1If labels are not explicitly entered, ggplot defaults to using variable names for axes and legends.</description>
    </item>
    
    <item>
      <title>Using LaTeX Font in Graphics</title>
      <link>/2019/08/09/using-latex-font-in-graphics/</link>
      <pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/09/using-latex-font-in-graphics/</guid>
      <description>When creating graphics to insert into reports, either directly through RMarkdown or with an exported image file, it can be annoying when the font used in the text and the graphic donâ€™t match. LaTex uses Computer Modern as its default font, this is a serif font but slightly different from the Times New Roman used by ggplot::theme(text=element_text(family=&#34;serif&#34;)). If no font family is provided, ggplot uses Ariel as a default. R base graphics similarly use a san-serif font.</description>
    </item>
    
    <item>
      <title>Plotting Confidence Intervals with ggplot2</title>
      <link>/2019/01/14/plotting-confidence-intervals-with-ggplot2/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/14/plotting-confidence-intervals-with-ggplot2/</guid>
      <description>Whether or not you subscribe to a school of statistics which finds confidence intervals an appropriate basis for statistical conclusions, you must admit that they can be a useful tool. Confidence intervals essentially describe, given an estimate calculated from a sample, the range of values that estimate might reasonably take within the population. For example, if found the average height of a sample of high school males, the confidence interval would tell you, with a specified degree of certainty, what you might expect the average height of all high school males to be.</description>
    </item>
    
  </channel>
</rss>